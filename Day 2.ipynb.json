{
  "metadata": {
    "kernelspec": {
      "name": "python",
      "display_name": "Python (Pyodide)",
      "language": "python"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    }
  },
  "nbformat_minor": 5,
  "nbformat": 4,
  "cells": [
    {
      "id": "49487176-d843-40c9-b706-c3227ba7f7c9",
      "cell_type": "code",
      "source": "fruits= [\"apple\",\"banana\", \"mango\"]\nfruits.append(\"orange\")\nfruits.append(\"pineapple\")\nfruits.remove(\"mango\")\nprint(fruits)\nfruits.sort()\nprint(fruits[3])",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "['apple', 'banana', 'orange', 'pineapple']\npineapple\n"
        }
      ],
      "execution_count": 20
    },
    {
      "id": "9a7ea5a7-debb-4b24-9592-f49f7cbcf3d9",
      "cell_type": "code",
      "source": "x = [\"jasmine\",\"daisies\",\"rose\",\"lily\"]\nx.insert(1,\"marigold\")\nprint(x)\nx.sort()\nprint(x) \nprint(x[4])",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "['jasmine', 'marigold', 'daisies', 'rose', 'lily']\n['daisies', 'jasmine', 'lily', 'marigold', 'rose']\nrose\n"
        }
      ],
      "execution_count": 22
    },
    {
      "id": "341a05dc-cb45-448c-821e-07b2217cc385",
      "cell_type": "code",
      "source": "colours = (\"red\", \"green\", \"blue\")\nprint(colours[1])\nprint(colours)\n#colours[2] = \"pink\" can't modify tuple",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "green\n('red', 'green', 'blue')\n"
        }
      ],
      "execution_count": 25
    },
    {
      "id": "d1bb4774-70ad-42b4-a638-78e478d1f485",
      "cell_type": "code",
      "source": "numbers ={1,2,3,3,4,4,5}\nnumbers.add(6)\nprint(numbers)",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "{1, 2, 3, 4, 5, 6}\n"
        }
      ],
      "execution_count": 27
    },
    {
      "id": "0a3b3aa6-ae89-4b3f-b2e8-25e33828e32b",
      "cell_type": "code",
      "source": "student = {\n    \"name\" : \"Purvi\",\n    \"age\" : 17,\n    \"course\" : \"python workshop\"\n}\nstudent [\"college\"] = \"Avinash College\"\nprint(student[\"name\"])\nstudent[\"age\"] = 18\nprint(student)\nprint(student.keys())\nprint(student.values())",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "Purvi\n{'name': 'Purvi', 'age': 18, 'course': 'python workshop', 'college': 'Avinash College'}\ndict_keys(['name', 'age', 'course', 'college'])\ndict_values(['Purvi', 18, 'python workshop', 'Avinash College'])\n"
        }
      ],
      "execution_count": 32
    },
    {
      "id": "d9a196ef-7160-4dd2-a8fb-3b8a908ae217",
      "cell_type": "code",
      "source": "marks = int(input(\"Enter marks :\"))\nif marks >= 90:\n    print(\"Grade : A\")\nelif marks >= 75:\n    print(\"Grade : B\")\nelif marks >= 50 :\n    print (\"Grade : C\")\nelse : \n    print(\"Grade : Fail\")\n",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdin",
          "text": "Enter marks : 99\n"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "Grade : A\n"
        }
      ],
      "execution_count": 40
    },
    {
      "id": "884e1cec-7bf8-4e70-9737-06d7d1a6b0ea",
      "cell_type": "code",
      "source": "for i in range (1,7):\n    print(\"Number:\", i)",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "Number: 1\nNumber: 2\nNumber: 3\nNumber: 4\nNumber: 5\nNumber: 6\n"
        }
      ],
      "execution_count": 42
    },
    {
      "id": "ae020594-47ef-46c8-a500-a67f97d85a42",
      "cell_type": "code",
      "source": "count = 3\nwhile count <=12:\n    print (\"Count : \", count)\n    count = count + 2",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "Count :  3\nCount :  5\nCount :  7\nCount :  9\nCount :  11\n"
        }
      ],
      "execution_count": 45
    },
    {
      "id": "80cbc3d8-d4cd-49bd-be47-73d3e49869ed",
      "cell_type": "code",
      "source": "for i in range (1,10):\n    if i==7:\n        break\n    print(i)",
      "metadata": {
        "trusted": true
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": "1\n2\n3\n4\n5\n6\n"
        }
      ],
      "execution_count": 4
    },
    {
      "id": "a645b1ac-83c8-4232-9cea-687d53032ca8",
      "cell_type": "code",
      "source": "",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    }
  ]
}